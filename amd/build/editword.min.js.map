{"version":3,"file":"editword.min.js","sources":["../src/editword.js"],"sourcesContent":["import ajax from \"core/ajax\";\nimport notification from \"core/notification\";\nimport ModalCancel from 'core/modal_cancel';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport ModalEvents from \"core/modal_events\";\nimport {get_string as getString} from 'core/str';\n\nexport const modWordcloudUpdateEntry = async (aid, backurl) => {\n    let wordlist = document.querySelectorAll(\".mod-wordcloud-edit-word\");\n    const changes = [];\n    const doubleentries = [];\n    const allentries = new Set();\n    const collectedentries = new Set();\n\n    wordlist.forEach(worditem => {\n        if (allentries.has(worditem.value)) {\n            doubleentries.push(worditem.value);\n        } else {\n            allentries.add(worditem.value);\n        }\n\n        if (worditem.dataset.word != worditem.value) {\n            changes.push({\n                wordid: worditem.dataset.id,\n                newword: worditem.value,\n                newcount: document.getElementById(\"mod-wordcloud-count\" + worditem.dataset.id).value\n            });\n            collectedentries.add(worditem.dataset.id);\n        }\n    });\n\n    wordlist = document.querySelectorAll(\".mod-wordcloud-edit-count\");\n    wordlist.forEach(worditem => {\n        if (worditem.dataset.count != worditem.value && !collectedentries.has(worditem.dataset.id)) {\n            changes.push({\n                wordid: worditem.dataset.id,\n                newword: document.getElementById(\"mod-wordcloud-word\" + worditem.dataset.id).value,\n                newcount: worditem.value\n            });\n        }\n    });\n\n    if (doubleentries.length) {\n        const modal = await ModalSaveCancel.create({\n            title: getString('warning', 'mod_wordcloud'),\n            body: confirmationMessage(doubleentries.toString())\n        });\n        modal.getRoot().on(ModalEvents.save, e => {\n            e.preventDefault();\n            sendWsCall(aid, changes, backurl);\n        });\n        modal.getRoot().on(ModalEvents.cancel, () => {\n            location.reload();\n        });\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n        modal.show();\n    } else {\n        sendWsCall(aid, changes, backurl);\n    }\n};\n\nconst confirmationMessage = async (data) => {\n    const confirmationWarning = await getString('warningdoubleentries', 'mod_wordcloud');\n    return confirmationWarning + data;\n};\n\nconst sendWsCall = (aid, changes, backurl) => {\n    ajax.call([{\n        methodname: 'mod_wordcloud_update_entry',\n        args: {aid: aid, entry: changes},\n        done: async function (returnval) {\n            if (!returnval.success) {\n                const modal = await ModalCancel.create({\n                    title: getString('warning', 'mod_wordcloud'),\n                    body: returnval.warnings[0].message,\n                });\n                modal.getRoot().on(ModalEvents.cancel, () => {\n                    location.reload();\n                });\n                modal.show();\n            } else {\n                location.href = backurl;\n            }\n        },\n        fail: notification.exception\n    }]);\n};\n\nexport const init = () => {\n    const updateButton = document.getElementById('mod-wordcloud-update-btn');\n\n    if (updateButton) {\n        updateButton.addEventListener('click', (e) => {\n            const aid = e.target.dataset.aid;\n            const backurl = e.target.dataset.backurl;\n\n            // Call the function directly on button click\n            modWordcloudUpdateEntry(aid, backurl);\n        });\n    }\n};\n"],"names":["modWordcloudUpdateEntry","async","aid","backurl","wordlist","document","querySelectorAll","changes","doubleentries","allentries","Set","collectedentries","forEach","worditem","has","value","push","add","dataset","word","wordid","id","newword","newcount","getElementById","count","length","modal","ModalSaveCancel","create","title","body","confirmationMessage","toString","getRoot","on","ModalEvents","save","e","preventDefault","sendWsCall","cancel","location","reload","hidden","destroy","show","data","call","methodname","args","entry","done","returnval","success","href","ModalCancel","warnings","message","fail","notification","exception","updateButton","addEventListener","target"],"mappings":"wrBAOaA,wBAA0BC,MAAOC,IAAKC,eAC3CC,SAAWC,SAASC,iBAAiB,kCACnCC,QAAU,GACVC,cAAgB,GAChBC,WAAa,IAAIC,IACjBC,iBAAmB,IAAID,OAE7BN,SAASQ,SAAQC,WACTJ,WAAWK,IAAID,SAASE,OACxBP,cAAcQ,KAAKH,SAASE,OAE5BN,WAAWQ,IAAIJ,SAASE,OAGxBF,SAASK,QAAQC,MAAQN,SAASE,QAClCR,QAAQS,KAAK,CACTI,OAAQP,SAASK,QAAQG,GACzBC,QAAST,SAASE,MAClBQ,SAAUlB,SAASmB,eAAe,sBAAwBX,SAASK,QAAQG,IAAIN,QAEnFJ,iBAAiBM,IAAIJ,SAASK,QAAQG,QAI9CjB,SAAWC,SAASC,iBAAiB,6BACrCF,SAASQ,SAAQC,WACTA,SAASK,QAAQO,OAASZ,SAASE,OAAUJ,iBAAiBG,IAAID,SAASK,QAAQG,KACnFd,QAAQS,KAAK,CACTI,OAAQP,SAASK,QAAQG,GACzBC,QAASjB,SAASmB,eAAe,qBAAuBX,SAASK,QAAQG,IAAIN,MAC7EQ,SAAUV,SAASE,WAK3BP,cAAckB,OAAQ,OAChBC,YAAcC,2BAAgBC,OAAO,CACvCC,OAAO,mBAAU,UAAW,iBAC5BC,KAAMC,oBAAoBxB,cAAcyB,cAE5CN,MAAMO,UAAUC,GAAGC,sBAAYC,MAAMC,IACjCA,EAAEC,iBACFC,WAAWtC,IAAKK,QAASJ,YAE7BwB,MAAMO,UAAUC,GAAGC,sBAAYK,QAAQ,KACnCC,SAASC,YAEbhB,MAAMO,UAAUC,GAAGC,sBAAYQ,QAAQ,KACnCjB,MAAMkB,aAEVlB,MAAMmB,YAENN,WAAWtC,IAAKK,QAASJ,yEAI3B6B,oBAAsB/B,MAAAA,YACU,mBAAU,uBAAwB,iBACvC8C,KAG3BP,WAAa,CAACtC,IAAKK,QAASJ,yBACzB6C,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAAChD,IAAKA,IAAKiD,MAAO5C,SACxB6C,KAAMnD,eAAgBoD,cACbA,UAAUC,QAUXZ,SAASa,KAAOpD,YAVI,OACdwB,YAAc6B,sBAAY3B,OAAO,CACnCC,OAAO,mBAAU,UAAW,iBAC5BC,KAAMsB,UAAUI,SAAS,GAAGC,UAEhC/B,MAAMO,UAAUC,GAAGC,sBAAYK,QAAQ,KACnCC,SAASC,YAEbhB,MAAMmB,SAKda,KAAMC,sBAAaC,4BAIP,WACVC,aAAezD,SAASmB,eAAe,4BAEzCsC,cACAA,aAAaC,iBAAiB,SAAUzB,UAC9BpC,IAAMoC,EAAE0B,OAAO9C,QAAQhB,IACvBC,QAAUmC,EAAE0B,OAAO9C,QAAQf,QAGjCH,wBAAwBE,IAAKC"}